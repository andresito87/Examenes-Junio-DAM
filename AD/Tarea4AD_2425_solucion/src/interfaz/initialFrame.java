/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

/**
 *
 * @author Usuario
 */
import com.db4o.ObjectSet;
import java.awt.event.WindowEvent;
import java.awt.event.WindowFocusListener;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelo.Autor;
import modelo.Cancion;
import modelo.gestionBD;
import static modelo.gestionBD.*;

public class initialFrame extends javax.swing.JFrame {

    /**
     * Creates new form initialFrame
     */
    public initialFrame() {
        initComponents();
        
        /* controlar cuando la ventana principal tiene el foco */    
        this.addWindowFocusListener(new WindowFocusListener() {
            @Override
            public void windowGainedFocus(WindowEvent e) {
                //System.out.println("Ventana principal recuperó el foco");
                // Actualizar datos, refrescar tablas, etc.
                actualizarTodosAutores();           
                actualizarTodasCanciones();
            }

            @Override
            public void windowLostFocus(WindowEvent e) {
                // Opcional: acciones cuando se pierde el foco
                // System.out.println("Ventana principal perdió el foco");
            }

        });
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton_nuevaCancion = new javax.swing.JButton();
        jButton_nuevoAutor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_autores = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable_canciones = new javax.swing.JTable();
        jButton_eliminarAutor = new javax.swing.JButton();
        jButton_eliminarCancion = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jCombo_consultas = new javax.swing.JComboBox();
        jButton_ejecutar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_consultas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setForeground(new java.awt.Color(255, 255, 255));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jButton_nuevaCancion.setText("Nueva Canción");
        jButton_nuevaCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nuevaCancionActionPerformed(evt);
            }
        });

        jButton_nuevoAutor.setText("Nuevo Autor");
        jButton_nuevoAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_nuevoAutorActionPerformed(evt);
            }
        });

        jTable_autores.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "NOMBRE", "NACIONALIDAD", "PAIS DE RESIDENCIA", "AÑO DE NACIMIENTO", "INGRESOS ANUALES"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_autores);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 255));
        jLabel1.setText("AUTORES");

        jLabel2.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 102, 102));
        jLabel2.setText("CANCIONES");

        jTable_canciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "IDENTIFICADOR", "TITULO", "DURACION", "AÑO DE CREACION", "GÉNERO", "AUTOR"
            }
        ));
        jScrollPane2.setViewportView(jTable_canciones);

        jButton_eliminarAutor.setText("Eliminar Autor");
        jButton_eliminarAutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarAutorActionPerformed(evt);
            }
        });

        jButton_eliminarCancion.setText("Eliminar Canción");
        jButton_eliminarCancion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_eliminarCancionActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 204, 204));
        jLabel3.setText("CONSULTAS");

        jCombo_consultas.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todas las canciones ordenadas por título", "Todas las canciones de un autor", "Todas las canciones de los autores de una nacionalidad", "Todos los autores con ingresos en el rango", "Aumentar ingresos de autores en un 5%" }));

        jButton_ejecutar.setText("Ejecutar");
        jButton_ejecutar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ejecutarActionPerformed(evt);
            }
        });

        jTable_consultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "", "", "", "", "", ""
            }
        ));
        jScrollPane3.setViewportView(jTable_consultas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 893, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jCombo_consultas, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(65, 65, 65)
                                        .addComponent(jButton_ejecutar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(229, 229, 229)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(239, 239, 239)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton_eliminarAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_nuevoAutor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_nuevaCancion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton_eliminarCancion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(29, 29, 29))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(270, 270, 270)
                        .addComponent(jLabel1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton_ejecutar)
                            .addComponent(jCombo_consultas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addComponent(jButton_nuevoAutor)
                        .addGap(18, 18, 18)
                        .addComponent(jButton_eliminarAutor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton_nuevaCancion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton_eliminarCancion)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_nuevaCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nuevaCancionActionPerformed
        // TODO add your handling code here:
        addCancionFrame ventanaAñadirCancion = new addCancionFrame();
        ventanaAñadirCancion.setVisible(true);
    }//GEN-LAST:event_jButton_nuevaCancionActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, gestionBD.desconectarBD());
        dispose();
    }//GEN-LAST:event_formWindowClosing

    private void jButton_nuevoAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_nuevoAutorActionPerformed
        // TODO add your handling code here:
        addAutorFrame ventanaAñadirAutor = new addAutorFrame();
        ventanaAñadirAutor.setVisible(true);
        actualizarTodosAutores();
    }//GEN-LAST:event_jButton_nuevoAutorActionPerformed

    private void jButton_eliminarAutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarAutorActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTable_autores.getSelectedRow();
        if (filaSeleccionada==-1)
            JOptionPane.showMessageDialog(null, "Para eliminar un autor debe estar seleccionado");
        else {        
            // recuperamos el valor del identificador de la canción seleccionada
            String valorNombre = (String) jTable_autores.getValueAt(filaSeleccionada, 0);
            // borramos la canción identificada por ese identificador
            JOptionPane.showMessageDialog(null,borrarAutor(valorNombre));                
        }
    }//GEN-LAST:event_jButton_eliminarAutorActionPerformed

    private void jButton_eliminarCancionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_eliminarCancionActionPerformed
        // TODO add your handling code here:
        int filaSeleccionada = jTable_canciones.getSelectedRow();
        if (filaSeleccionada==-1)
            JOptionPane.showMessageDialog(null, "Para eliminar una canción debe estar seleccionada");
        else {        
            // recuperamos el valor del identificador de la canción seleccionada
            String valorId = (String) jTable_canciones.getValueAt(filaSeleccionada, 0);
            // borramos la canción identificada por ese identificador
            JOptionPane.showMessageDialog(null,borrarCancion(valorId));                
        }
    }//GEN-LAST:event_jButton_eliminarCancionActionPerformed

    private void jButton_ejecutarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ejecutarActionPerformed
        // TODO add your handling code here:
        //borrar todo el contenido de la anterior consulta
        ObjectSet res;
        DefaultTableModel modelo = (DefaultTableModel) jTable_consultas.getModel();
        modelo.setNumRows(0);
        
        int opcionSeleccionada = jCombo_consultas.getSelectedIndex();
        switch (opcionSeleccionada){
            case 0:       
                res = obtenerTodasCancionesOrdenadasTitulo(); 
                while (res.hasNext()){
                    Cancion c = (Cancion)res.next();
                    Object[] fila = { c.getIdentificador(), c.getTitulo(), c.getDuracion(), c.getAnio_creacion(), c.getGenero(), c.getAutor().getNombre()};  // Datos según las columnas
                    modelo.addRow(fila); 
                }
                break;  
            case 1:
                res=null;
                String nombreAutor =JOptionPane.showInputDialog(null, "Introduzca el nombre del autor");
                if (nombreAutor!= null)
                    res = obtenerCancionesDeAutor(nombreAutor.toUpperCase()); 
                while (res!=null  && res.hasNext()){
                    Cancion c = (Cancion)res.next();
                    Object[] fila = { c.getIdentificador(), c.getTitulo(), c.getDuracion(), c.getAnio_creacion(), c.getGenero(), c.getAutor().getNombre()};  // Datos según las columnas
                    modelo.addRow(fila); 
                }      
                break;       
            case 2:
                res=null;
                String nacionalidad =JOptionPane.showInputDialog(null, "Introduzca la nacionalidad");
                if (nacionalidad!=null)
                    res = obtenerCancionesPorNacionalidadAutor(nacionalidad.toUpperCase()); 
                while (res!=null  && res.hasNext()){
                    Cancion c = (Cancion)res.next();
                    Object[] fila = { c.getIdentificador(), c.getTitulo(), c.getDuracion(), c.getAnio_creacion(), c.getGenero(), c.getAutor().getNombre()};  // Datos según las columnas
                    modelo.addRow(fila);                }
                break;                   
            case 3:
                String limiteInferior =JOptionPane.showInputDialog(null, "Introduzca el valor mínimo de ingresos");
                String limiteSuperior =JOptionPane.showInputDialog(null, "Introduzca el valor máximo de ingresos");
                if (limiteInferior!=null && limiteSuperior!= null && esDecimal(limiteInferior) && esDecimal(limiteSuperior)){
                    res = obtenerAutoresPorIngresos(Double.parseDouble(limiteInferior), Double.parseDouble(limiteSuperior)); 
                    while (res!=null  && res.hasNext()){
                        Autor a = (Autor)res.next();
                        Object[] fila = { a.getNombre(), a.getNacionalidad(), a.getPais_residencia(), a.getAño_nacimiento(), a.getIngresos_anuales()};  // Datos según las columnas
                        modelo.addRow(fila); 
                    }     
                }
                else
                    JOptionPane.showMessageDialog(null, "Falta alguno de los valores o no son válidos");
                break;        
            default:
                JOptionPane.showMessageDialog(null, aumentarIngresosAutores());
                 
        }

        
    }//GEN-LAST:event_jButton_ejecutarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(initialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(initialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(initialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(initialFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
       
                new initialFrame().setVisible(true);
                
                //conectar con la base de datos y mostrar la mensaje informando de si la conexión ha sido exitosa    
                JOptionPane.showMessageDialog(null, gestionBD.conectarBD());
                
            }
        });
        
        
    }
    /**
     * Método que actualiza la tabla de autores con todos los autores de la base de datos
     */
    static void actualizarTodosAutores(){
        DefaultTableModel modelo = (DefaultTableModel) jTable_autores.getModel();
        modelo.setNumRows(0);
        ObjectSet autores = obtenerTodosAutores();
                
        while (autores.hasNext()){
             Autor a = (Autor)autores.next();
             Object[] fila = { a.getNombre(), a.getNacionalidad(), a.getPais_residencia(), a.getAño_nacimiento(), a.getIngresos_anuales() };  // Datos según las columnas
             modelo.addRow(fila);   
        }
    }
    
    /**
     * Método que actualiza la tabla de Canciones con todos los autores de la base de datos
     */
    static void actualizarTodasCanciones(){
        DefaultTableModel modelo = (DefaultTableModel) jTable_canciones.getModel();
        modelo.setNumRows(0);
        ObjectSet canciones = obtenerTodasCanciones();
                
        while (canciones.hasNext()){
             Cancion c = (Cancion)canciones.next();
             Object[] fila = { c.getIdentificador(), c.getTitulo(), c.getDuracion(), c.getAnio_creacion(), c.getGenero(), c.getAutor().getNombre()};  // Datos según las columnas
             modelo.addRow(fila);   
        }
    }
    
    /**
     * Método que recibe un String y comprueba si se puede convertir a un valor decimal, devolviendo true o
     * false el caso.
     * @param texto
     * @return 
     */
    private boolean esDecimal(String texto) {
        try {
            Double.parseDouble(texto);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ejecutar;
    private javax.swing.JButton jButton_eliminarAutor;
    private javax.swing.JButton jButton_eliminarCancion;
    private javax.swing.JButton jButton_nuevaCancion;
    private javax.swing.JButton jButton_nuevoAutor;
    private javax.swing.JComboBox jCombo_consultas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private static javax.swing.JTable jTable_autores;
    private static javax.swing.JTable jTable_canciones;
    private javax.swing.JTable jTable_consultas;
    // End of variables declaration//GEN-END:variables

    
}
